clear
clc
robot = importrobot('sm_kinovaGen3.urdf');

%Show info of Kinovagen3
showdetails(robot)

%Get a random configuration for IK solver to use as initial guess
randConfig =robot.randomConfiguration;

%Get transformation matrix of the random configuration
tform = getTransform(robot,randConfig,'EndEffector_Link','base_link');

%Show the random configuration
figure(1)
show(robot,randConfig);
xlim([-1 1])
ylim([-1 1])
zlim([-1 1])

%Setup a solver for kinovaGen3
ik = inverseKinematics('RigidBodyTree',robot);

%Tolerance for position and orientation 
weights = [0.25 0.25 0.25 1 1 1];
initialguess = robot.homeConfiguration;

figure(2)
[configSoln,solnInfo] = ik('EndEffector_Link',tform,weights,initialguess);
show(robot,configSoln);

xlim([-1 1])
ylim([-1 1])
zlim([-1 1])